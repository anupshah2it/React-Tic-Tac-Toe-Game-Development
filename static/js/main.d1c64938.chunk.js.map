{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","onclick","value","Board","state","squares","Array","fill","xIsNext","i","this","slice","calculatewinner","setState","handleClick","status","winner","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"sNAoBA,SAASA,EAAOC,GACd,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAMG,QAA1C,SACGH,EAAMI,Q,IAKPC,E,kDACN,WAAYL,GAAO,IAAD,8BAChB,cAAMA,IACDM,MAAM,CACTC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJK,E,wDAQNC,GACV,IAAMJ,EAAUK,KAAKN,MAAMC,QAAQM,QAChCC,EAAgBP,IAAYA,EAAQI,KAGvCJ,EAAQI,GAAIC,KAAKN,MAAMI,QAAU,IAAK,IACtCE,KAAKG,SAAS,CACRR,QAAQA,EACRG,SAAUE,KAAKN,MAAMI,a,mCAKdC,GAAI,IAAD,OACd,OAAQ,cAACZ,EAAD,CACIK,MAAOQ,KAAKN,MAAMC,QAAQI,GAC1BR,QAAS,kBAAI,EAAKa,YAAYL,Q,+BAM1C,IAEIM,EAFEC,EAASJ,EAAgBF,KAAKN,MAAMC,SAU1C,OANEU,EADCC,EACM,WAAYA,EAGX,iBAAkBN,KAAKN,MAAMI,QAAU,IAAM,KAIrD,gCACE,qBAAKT,UAAU,SAAf,SAAyBgB,IACzB,sBAAKhB,UAAU,YAAf,UACGW,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,MAErB,sBAAKlB,UAAU,YAAf,UACGW,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,MAErB,sBAAKlB,UAAU,YAAf,UACGW,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,a,GAzDTC,IAAMC,WAkEpBC,E,uKAEF,OACE,sBAAKrB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACI,EAAD,MAEF,sBAAKJ,UAAU,YAAf,UACE,wBACA,iC,GATSmB,IAAMC,WAwBzB,SAASP,EAAgBP,GAavB,IAZA,IAAMgB,EAAM,CACV,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAIDZ,EAAE,EAAGA,EAAEY,EAAMC,OAAQb,IAAI,CAAC,IAAD,cAClBY,EAAMZ,GADY,GACzBc,EADyB,KACvBC,EADuB,KACrBC,EADqB,KAE/B,GAAGpB,EAAQkB,IAAMlB,EAAQkB,KAAMlB,EAAQmB,IAAMnB,EAAQkB,KAAOlB,EAAQoB,GAClE,OAAOpB,EAAQkB,IAtBrBG,IAASC,OACP,cAACP,EAAD,IACAQ,SAASC,eAAe,W","file":"static/js/main.d1c64938.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n// class Square extends React.Component {\r\n//   constructor(props){\r\n//     super(props);\r\n//     this.state={value: null};\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <button className=\"square\" \r\n//               onClick={()=> this.props.onclick()}>\r\n//               {this.props.value}\r\n//       </button>\r\n//     );\r\n//   }\r\n// }\r\n\r\nfunction Square(props){\r\n  return (\r\n    <button className=\"square\" onClick={props.onclick}>\r\n      {props.value}\r\n    </button>\r\n  )\r\n}\r\n\r\nclass Board extends React.Component {\r\nconstructor(props){\r\n  super(props);\r\n  this.state={\r\n    squares: Array(9).fill(null),\r\n    xIsNext: true,\r\n  };\r\n}\r\n\r\nhandleClick(i){\r\n  const squares = this.state.squares.slice();\r\n  if(calculatewinner(squares) || squares[i]){\r\n    return;\r\n  }\r\n  squares[i]= this.state.xIsNext ? 'X' :'O';\r\n  this.setState({\r\n        squares:squares,\r\n        xIsNext: !this.state.xIsNext,\r\n      });\r\n}\r\n\r\n\r\n  renderSquare(i) {\r\n    return (<Square \r\n                value={this.state.squares[i]}\r\n                onclick={()=>this.handleClick(i)}\r\n            />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const winner = calculatewinner(this.state.squares);\r\n\r\n    let status;\r\n    if(winner){\r\n      status='Winner: ' +winner;      \r\n    }\r\n    else{\r\n      status= 'Next player: '+ (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"status\">{status}</div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nclass Game extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{/* status */}</div>\r\n          <ol>{/* TODO */}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nfunction calculatewinner(squares){\r\n  const lines=[\r\n    [0,1,2],\r\n    [3,4,5],\r\n    [6,7,8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n    \r\n  ];\r\n\r\n  for(let i=0; i<lines.length; i++){\r\n    const[a,b,c]=lines[i];\r\n    if(squares[a] && squares[a]=== squares[b] && squares[a] === squares[c]){\r\n      return squares[a];\r\n    }\r\n  }\r\n}"],"sourceRoot":""}